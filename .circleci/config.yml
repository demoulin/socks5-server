# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
jobs:
  build:
    docker:
      # specify the version
      - image: circleci/golang:1.8
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    #### TEMPLATE_NOTE: go expects specific checkout path representing url
    #### expecting it in the form of
    ####   /go/src/github.com/circleci/go-tool
    ####   /go/src/bitbucket.org/circleci/go-tool
    working_directory: /go/src/github.com/demoulin/sock5-server
    steps:
      - checkout
        - run:
            name: Get go packages
            command: go get -v -t -d ./...
        - run: 
            name: Test go packages
            command: go test -v ./...
      - install docker
        - run:
            name: Install Docker client
            command: |
              set -x
              VER="17.12.0-ce"
              curl -L -o /tmp/docker-$VER.tgz https://download.docker.com/linux/static/stable/x86_64/docker-$VER.tgz
              tar -xz -C /tmp -f /tmp/docker-$VER.tgz
              mv /tmp/docker/* /usr/bin
      - build docker
        - run:
            name: Build Docker image
            command: docker build -t demoulin/go-socks5-proxy .
      # build and push Docker image
      - deploy
        - run:
            name: Docker Push
            command: |
              docker login -u $DOCKERHUB_USER -p $DOCKERHUB_PASSWORD
                if [ $CIRCLE_TAG -ne "undefined" ];
                then
                  docker tag demoulin/go-socks5-proxy demoulin/go-socks5-proxy:$CIRCLE_TAG
                  docker push demoulin/go-socks5-proxy:$CIRCLE_TAG
                else
                  docker tag demoulin/go-socks5-proxy demoulin/go-socks5-proxy:dev
                  docker push demoulin/go-socks5-proxy:dev
                fi